{"version":3,"file":"web_driver_adapter.js","sourceRoot":"/home/travis/build/angular/angular/packages/benchpress/","sources":["src/web_driver_adapter.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAIH;;;;GAIG;AACH;IACE,OAAO,CAAC,QAAkB,IAAkB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrE,aAAa,CAAC,MAAc,IAAkB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvE,kBAAkB,CAAC,MAAc,IAAkB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5E,YAAY,KAAoC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzE,IAAI,CAAC,IAAY,IAAoB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAC/D;AAND,4CAMC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n/**\n * A WebDriverAdapter bridges API differences between different WebDriver clients,\n * e.g. JS vs Dart Async vs Dart Sync webdriver.\n * Needs one implementation for every supported WebDriver client.\n */\nexport abstract class WebDriverAdapter {\n  waitFor(callback: Function): Promise<any> { throw new Error('NYI'); }\n  executeScript(script: string): Promise<any> { throw new Error('NYI'); }\n  executeAsyncScript(script: string): Promise<any> { throw new Error('NYI'); }\n  capabilities(): Promise<{[key: string]: any}> { throw new Error('NYI'); }\n  logs(type: string): Promise<any[]> { throw new Error('NYI'); }\n}\n"]}