{"version":3,"file":"util.js","sourceRoot":"/home/travis/build/angular/angular/packages/benchpress/","sources":["src/reporter/util.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAGH,4CAAuC;AAEvC,mBAA0B,CAAS;IACjC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC;AAFD,8BAEC;AAED,qBAA4B,GAAyB;IACnD,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;AACjC,CAAC;AAFD,kCAEC;AAED,qBAA4B,YAA6B,EAAE,UAAkB;IAC3E,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACpF,MAAM,IAAI,GAAG,qBAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC9C,MAAM,EAAE,GAAG,qBAAS,CAAC,+BAA+B,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACpE,MAAM,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IACtC,iEAAiE;IACjE,0BAA0B;IAC1B,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,aAAa,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC;AAC5E,CAAC;AARD,kCAQC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MeasureValues} from '../measure_values';\nimport {Statistic} from '../statistic';\n\nexport function formatNum(n: number) {\n  return n.toFixed(2);\n}\n\nexport function sortedProps(obj: {[key: string]: any}) {\n  return Object.keys(obj).sort();\n}\n\nexport function formatStats(validSamples: MeasureValues[], metricName: string): string {\n  const samples = validSamples.map(measureValues => measureValues.values[metricName]);\n  const mean = Statistic.calculateMean(samples);\n  const cv = Statistic.calculateCoefficientOfVariation(samples, mean);\n  const formattedMean = formatNum(mean);\n  // Note: Don't use the unicode character for +- as it might cause\n  // hickups for consoles...\n  return isNaN(cv) ? formattedMean : `${formattedMean}+-${Math.floor(cv)}%`;\n}\n"]}