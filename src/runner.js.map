{"version":3,"file":"runner.js","sourceRoot":"/home/travis/build/angular/angular/packages/benchpress/","sources":["src/runner.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, StaticProvider} from '@angular/core';\n\nimport {Options} from './common_options';\nimport {Metric} from './metric';\nimport {MultiMetric} from './metric/multi_metric';\nimport {PerflogMetric} from './metric/perflog_metric';\nimport {UserMetric} from './metric/user_metric';\nimport {Reporter} from './reporter';\nimport {ConsoleReporter} from './reporter/console_reporter';\nimport {MultiReporter} from './reporter/multi_reporter';\nimport {SampleDescription} from './sample_description';\nimport {SampleState, Sampler} from './sampler';\nimport {Validator} from './validator';\nimport {RegressionSlopeValidator} from './validator/regression_slope_validator';\nimport {SizeValidator} from './validator/size_validator';\nimport {WebDriverAdapter} from './web_driver_adapter';\nimport {WebDriverExtension} from './web_driver_extension';\nimport {ChromeDriverExtension} from './webdriver/chrome_driver_extension';\nimport {FirefoxDriverExtension} from './webdriver/firefox_driver_extension';\nimport {IOsDriverExtension} from './webdriver/ios_driver_extension';\n\n\n\n/**\n * The Runner is the main entry point for executing a sample run.\n * It provides defaults, creates the injector and calls the sampler.\n */\nexport class Runner {\n  constructor(private _defaultProviders: StaticProvider[] = []) {}\n\n  sample({id, execute, prepare, microMetrics, providers, userMetrics}: {\n    id: string,\n    execute?: Function,\n    prepare?: Function,\n    microMetrics?: {[key: string]: string},\n    providers?: StaticProvider[],\n    userMetrics?: {[key: string]: string}\n  }): Promise<SampleState> {\n    const sampleProviders: StaticProvider[] = [\n      _DEFAULT_PROVIDERS, this._defaultProviders, {provide: Options.SAMPLE_ID, useValue: id},\n      {provide: Options.EXECUTE, useValue: execute}\n    ];\n    if (prepare != null) {\n      sampleProviders.push({provide: Options.PREPARE, useValue: prepare});\n    }\n    if (microMetrics != null) {\n      sampleProviders.push({provide: Options.MICRO_METRICS, useValue: microMetrics});\n    }\n    if (userMetrics != null) {\n      sampleProviders.push({provide: Options.USER_METRICS, useValue: userMetrics});\n    }\n    if (providers != null) {\n      sampleProviders.push(providers);\n    }\n\n    const inj = Injector.create(sampleProviders);\n    const adapter: WebDriverAdapter = inj.get(WebDriverAdapter);\n\n    return Promise\n        .all([adapter.capabilities(), adapter.executeScript('return window.navigator.userAgent;')])\n        .then((args) => {\n          const capabilities = args[0];\n          const userAgent = args[1];\n\n          // This might still create instances twice. We are creating a new injector with all the\n          // providers.\n          // Only WebDriverAdapter is reused.\n          // TODO(vsavkin): consider changing it when toAsyncFactory is added back or when child\n          // injectors are handled better.\n          const injector = Injector.create([\n            sampleProviders, {provide: Options.CAPABILITIES, useValue: capabilities},\n            {provide: Options.USER_AGENT, useValue: userAgent},\n            {provide: WebDriverAdapter, useValue: adapter}\n          ]);\n\n          // TODO: With TypeScript 2.5 injector.get does not infer correctly the\n          // return type. Remove 'any' and investigate the issue.\n          const sampler = injector.get(Sampler) as any;\n          return sampler.sample();\n        });\n  }\n}\n\nconst _DEFAULT_PROVIDERS = [\n  Options.DEFAULT_PROVIDERS,\n  Sampler.PROVIDERS,\n  ConsoleReporter.PROVIDERS,\n  RegressionSlopeValidator.PROVIDERS,\n  SizeValidator.PROVIDERS,\n  ChromeDriverExtension.PROVIDERS,\n  FirefoxDriverExtension.PROVIDERS,\n  IOsDriverExtension.PROVIDERS,\n  PerflogMetric.PROVIDERS,\n  UserMetric.PROVIDERS,\n  SampleDescription.PROVIDERS,\n  MultiReporter.provideWith([ConsoleReporter]),\n  MultiMetric.provideWith([PerflogMetric, UserMetric]),\n  {provide: Reporter, useExisting: MultiReporter},\n  {provide: Validator, useExisting: RegressionSlopeValidator},\n  WebDriverExtension.provideFirstSupported(\n      [ChromeDriverExtension, FirefoxDriverExtension, IOsDriverExtension]),\n  {provide: Metric, useExisting: MultiMetric},\n];\n"]}