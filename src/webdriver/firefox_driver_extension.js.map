{"version":3,"file":"firefox_driver_extension.js","sourceRoot":"/home/travis/build/angular/angular/packages/benchpress/","sources":["src/webdriver/firefox_driver_extension.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;;;;;;AAEH,wCAAyC;AAEzC,8DAAuD;AACvD,kEAA0F;AAG1F,IAAa,sBAAsB,8BAAnC,4BAAoC,SAAQ,yCAAkB;IAK5D,YAAoB,OAAyB;QAC3C,KAAK,EAAE,CAAC;QADU,YAAO,GAAP,OAAO,CAAkB;QAE3C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,EAAE,KAAK,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAE/D,SAAS,CAAC,IAAY;QACpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;QACxD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,oBAAoB,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IACzE,CAAC;IAED,OAAO,CAAC,IAAY,EAAE,cAA2B,IAAI;QACnD,IAAI,MAAM,GAAG,kBAAkB,GAAG,IAAI,GAAG,KAAK,CAAC;QAC/C,EAAE,CAAC,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC;YACxB,MAAM,IAAI,oBAAoB,GAAG,WAAW,GAAG,KAAK,CAAC;QACvD,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAED,WAAW;QACT,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,+CAA+C,CAAC,CAAC;IAC1F,CAAC;IAED,eAAe,KAAsB,MAAM,CAAC,IAAI,sCAAe,CAAC,EAAC,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC,CAAC;IAE5F,QAAQ,CAAC,YAAkC;QACzC,MAAM,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,WAAW,EAAE,KAAK,SAAS,CAAC;IACjE,CAAC;CACF,CAAA;AApCQ,gCAAS,GAAG,CAAC,EAAC,OAAO,EAAE,wBAAsB,EAAE,IAAI,EAAE,CAAC,qCAAgB,CAAC,EAAC,CAAC,CAAC;AADtE,sBAAsB;IADlC,iBAAU,EAAE;GACA,sBAAsB,CAqClC;AArCY,wDAAsB","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\n\nimport {WebDriverAdapter} from '../web_driver_adapter';\nimport {PerfLogEvent, PerfLogFeatures, WebDriverExtension} from '../web_driver_extension';\n\n@Injectable()\nexport class FirefoxDriverExtension extends WebDriverExtension {\n  static PROVIDERS = [{provide: FirefoxDriverExtension, deps: [WebDriverAdapter]}];\n\n  private _profilerStarted: boolean;\n\n  constructor(private _driver: WebDriverAdapter) {\n    super();\n    this._profilerStarted = false;\n  }\n\n  gc() { return this._driver.executeScript('window.forceGC()'); }\n\n  timeBegin(name: string): Promise<any> {\n    if (!this._profilerStarted) {\n      this._profilerStarted = true;\n      this._driver.executeScript('window.startProfiler();');\n    }\n    return this._driver.executeScript('window.markStart(\"' + name + '\");');\n  }\n\n  timeEnd(name: string, restartName: string|null = null): Promise<any> {\n    let script = 'window.markEnd(\"' + name + '\");';\n    if (restartName != null) {\n      script += 'window.markStart(\"' + restartName + '\");';\n    }\n    return this._driver.executeScript(script);\n  }\n\n  readPerfLog(): Promise<PerfLogEvent[]> {\n    return this._driver.executeAsyncScript('var cb = arguments[0]; window.getProfile(cb);');\n  }\n\n  perfLogFeatures(): PerfLogFeatures { return new PerfLogFeatures({render: true, gc: true}); }\n\n  supports(capabilities: {[key: string]: any}): boolean {\n    return capabilities['browserName'].toLowerCase() === 'firefox';\n  }\n}\n"]}