{"version":3,"file":"metric.js","sourceRoot":"/home/travis/build/angular/angular/packages/benchpress/","sources":["src/metric.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAGH;;GAEG;AACH;IACE;;OAEG;IACH,YAAY,KAAmB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAExD;;;;OAIG;IACH,UAAU,CAAC,OAAgB,IAAmC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvF;;;OAGG;IACH,QAAQ,KAA8B,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CAChE;AAlBD,wBAkBC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n/**\n * A metric is measures values\n */\nexport abstract class Metric {\n  /**\n   * Starts measuring\n   */\n  beginMeasure(): Promise<any> { throw new Error('NYI'); }\n\n  /**\n   * Ends measuring and reports the data\n   * since the begin call.\n   * @param restart: Whether to restart right after this.\n   */\n  endMeasure(restart: boolean): Promise<{[key: string]: any}> { throw new Error('NYI'); }\n\n  /**\n   * Describes the metrics provided by this metric implementation.\n   * (e.g. units, ...)\n   */\n  describe(): {[key: string]: string} { throw new Error('NYI'); }\n}\n"]}