{"version":3,"file":"web_driver_extension.js","sourceRoot":"/home/travis/build/angular/angular/packages/benchpress/","sources":["src/web_driver_extension.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;AAEH,wCAAuD;AAEvD,qDAAyC;AAmBzC;;;;GAIG;AACH;IACE,MAAM,CAAC,qBAAqB,CAAC,WAAkB;QAC7C,MAAM,GAAG,GAAG;YACV;gBACE,OAAO,EAAE,SAAS;gBAClB,UAAU,EAAE,CAAC,QAAkB,EAAE,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACjF,IAAI,EAAE,CAAC,eAAQ,CAAC;aACjB;YACD;gBACE,OAAO,EAAE,kBAAkB;gBAC3B,UAAU,EAAE,CAAC,QAA8B,EAAE,YAAkC,EAAE,EAAE;oBACjF,IAAI,QAAQ,GAAuB,SAAW,CAAC;oBAC/C,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;wBAC3B,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;4BACrC,QAAQ,GAAG,SAAS,CAAC;wBACvB,CAAC;oBACH,CAAC,CAAC,CAAC;oBACH,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACd,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;oBACvE,CAAC;oBACD,MAAM,CAAC,QAAQ,CAAC;gBAClB,CAAC;gBACD,IAAI,EAAE,CAAC,SAAS,EAAE,wBAAO,CAAC,YAAY,CAAC;aACxC;SACF,CAAC;QACF,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;IAED,EAAE,KAAmB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE9C,SAAS,CAAC,IAAY,IAAkB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEjE,OAAO,CAAC,IAAY,EAAE,WAAwB,IAAkB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAEzF;;;;;;;;;;;QAWI;IACJ,WAAW,KAA8B,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAElE,eAAe,KAAsB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAE9D,QAAQ,CAAC,YAAkC,IAAa,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;CACvE;AAnDD,gDAmDC;AAED;IAME,YACI,EAAC,MAAM,GAAG,KAAK,EAAE,EAAE,GAAG,KAAK,EAAE,YAAY,GAAG,KAAK,EAAE,UAAU,GAAG,KAAK,KACgB,EAAE;QACzF,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;CACF;AAdD,0CAcC;AAED,MAAM,SAAS,GAAG,IAAI,qBAAc,CAAC,6BAA6B,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, Injector} from '@angular/core';\n\nimport {Options} from './common_options';\n\nexport type PerfLogEvent = {\n  [key: string]: any\n} & {\n  ph?: 'X' | 'B' | 'E' | 'I',\n  ts?: number,\n  dur?: number,\n  name?: string,\n  pid?: string,\n  args?: {\n    encodedDataLength?: number,\n    usedHeapSize?: number,\n    majorGc?: boolean,\n    url?: string,\n    method?: string\n  }\n};\n\n/**\n * A WebDriverExtension implements extended commands of the webdriver protocol\n * for a given browser, independent of the WebDriverAdapter.\n * Needs one implementation for every supported Browser.\n */\nexport abstract class WebDriverExtension {\n  static provideFirstSupported(childTokens: any[]): any[] {\n    const res = [\n      {\n        provide: _CHILDREN,\n        useFactory: (injector: Injector) => childTokens.map(token => injector.get(token)),\n        deps: [Injector]\n      },\n      {\n        provide: WebDriverExtension,\n        useFactory: (children: WebDriverExtension[], capabilities: {[key: string]: any}) => {\n          let delegate: WebDriverExtension = undefined !;\n          children.forEach(extension => {\n            if (extension.supports(capabilities)) {\n              delegate = extension;\n            }\n          });\n          if (!delegate) {\n            throw new Error('Could not find a delegate for given capabilities!');\n          }\n          return delegate;\n        },\n        deps: [_CHILDREN, Options.CAPABILITIES]\n      }\n    ];\n    return res;\n  }\n\n  gc(): Promise<any> { throw new Error('NYI'); }\n\n  timeBegin(name: string): Promise<any> { throw new Error('NYI'); }\n\n  timeEnd(name: string, restartName: string|null): Promise<any> { throw new Error('NYI'); }\n\n  /**\n   * Format:\n   * - cat: category of the event\n   * - name: event name: 'script', 'gc', 'render', ...\n   * - ph: phase: 'B' (begin), 'E' (end), 'X' (Complete event), 'I' (Instant event)\n   * - ts: timestamp in ms, e.g. 12345\n   * - pid: process id\n   * - args: arguments, e.g. {heapSize: 1234}\n   *\n   * Based on [Chrome Trace Event\n   *Format](https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU/edit)\n   **/\n  readPerfLog(): Promise<PerfLogEvent[]> { throw new Error('NYI'); }\n\n  perfLogFeatures(): PerfLogFeatures { throw new Error('NYI'); }\n\n  supports(capabilities: {[key: string]: any}): boolean { return true; }\n}\n\nexport class PerfLogFeatures {\n  render: boolean;\n  gc: boolean;\n  frameCapture: boolean;\n  userTiming: boolean;\n\n  constructor(\n      {render = false, gc = false, frameCapture = false, userTiming = false}:\n          {render?: boolean, gc?: boolean, frameCapture?: boolean, userTiming?: boolean} = {}) {\n    this.render = render;\n    this.gc = gc;\n    this.frameCapture = frameCapture;\n    this.userTiming = userTiming;\n  }\n}\n\nconst _CHILDREN = new InjectionToken('WebDriverExtension.children');\n"]}