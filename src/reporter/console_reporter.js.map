{"version":3,"file":"console_reporter.js","sourceRoot":"/home/travis/build/angular/angular/packages/benchpress/","sources":["src/reporter/console_reporter.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken} from '@angular/core';\nimport {MeasureValues} from '../measure_values';\nimport {Reporter} from '../reporter';\nimport {SampleDescription} from '../sample_description';\n\nimport {formatNum, formatStats, sortedProps} from './util';\n\n\n/**\n * A reporter for the console\n */\n@Injectable()\nexport class ConsoleReporter extends Reporter {\n  static PRINT = new InjectionToken('ConsoleReporter.print');\n  static COLUMN_WIDTH = new InjectionToken('ConsoleReporter.columnWidth');\n  static PROVIDERS = [\n    {\n      provide: ConsoleReporter,\n      deps: [ConsoleReporter.COLUMN_WIDTH, SampleDescription, ConsoleReporter.PRINT]\n    },\n    {provide: ConsoleReporter.COLUMN_WIDTH, useValue: 18}, {\n      provide: ConsoleReporter.PRINT,\n      useValue: function(v: any) {\n        // tslint:disable-next-line:no-console\n        console.log(v);\n      }\n    }\n  ];\n\n  private static _lpad(value: string, columnWidth: number, fill = ' ') {\n    let result = '';\n    for (let i = 0; i < columnWidth - value.length; i++) {\n      result += fill;\n    }\n    return result + value;\n  }\n\n  private _metricNames: string[];\n\n  constructor(\n      @Inject(ConsoleReporter.COLUMN_WIDTH) private _columnWidth: number,\n      sampleDescription: SampleDescription,\n      @Inject(ConsoleReporter.PRINT) private _print: Function) {\n    super();\n    this._metricNames = sortedProps(sampleDescription.metrics);\n    this._printDescription(sampleDescription);\n  }\n\n  private _printDescription(sampleDescription: SampleDescription) {\n    this._print(`BENCHMARK ${sampleDescription.id}`);\n    this._print('Description:');\n    const props = sortedProps(sampleDescription.description);\n    props.forEach((prop) => { this._print(`- ${prop}: ${sampleDescription.description[prop]}`); });\n    this._print('Metrics:');\n    this._metricNames.forEach((metricName) => {\n      this._print(`- ${metricName}: ${sampleDescription.metrics[metricName]}`);\n    });\n    this._print('');\n    this._printStringRow(this._metricNames);\n    this._printStringRow(this._metricNames.map((_) => ''), '-');\n  }\n\n  reportMeasureValues(measureValues: MeasureValues): Promise<any> {\n    const formattedValues = this._metricNames.map(metricName => {\n      const value = measureValues.values[metricName];\n      return formatNum(value);\n    });\n    this._printStringRow(formattedValues);\n    return Promise.resolve(null);\n  }\n\n  reportSample(completeSample: MeasureValues[], validSamples: MeasureValues[]): Promise<any> {\n    this._printStringRow(this._metricNames.map((_) => ''), '=');\n    this._printStringRow(\n        this._metricNames.map(metricName => formatStats(validSamples, metricName)));\n    return Promise.resolve(null);\n  }\n\n  private _printStringRow(parts: any[], fill = ' ') {\n    this._print(\n        parts.map(part => ConsoleReporter._lpad(part, this._columnWidth, fill)).join(' | '));\n  }\n}\n"]}